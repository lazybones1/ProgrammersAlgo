import java.util.Stack;
class Solution {
    Stack<Integer> basket;
    int count;
    
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        init();
        for(int i = 0; i< moves.length; i++){
            for(int j = 0; j< board.length; j++){
                if(board[j][moves[i]-1] != 0 ){
                    booms(board[j][moves[i]-1]);
                    board[j][moves[i]-1] = 0;
                    break;
                }
            }
        }
        answer = count;
        return answer;
    }
    
    private void init(){
        basket = new Stack<>();
        count = 0;
    }   
    
    private void booms(int val){ 
        if(basket.size() == 0){
            basket.push(val);
        }
        else if(basket.peek() != val){
            basket.push(val);
        }
        else{
            basket.pop();
            count += 2;
        }    
    }
}